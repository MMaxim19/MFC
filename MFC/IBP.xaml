<Window x:Class="MFC.IBP"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MFC"
        mc:Ignorable="d"
        Title="IBP" Height="492" Width="1092" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="btn_Style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Button Style="{DynamicResource btn_Style}" Click="btnBack" Content="Button" HorizontalAlignment="Left" Margin="20,20,0,0" VerticalAlignment="Top" Width="50" Height="50" BorderBrush="{x:Null}" Foreground="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/back.png"/>
            </Button.Background>
        </Button>
        <DataGrid IsReadOnly="true" x:Name="IBP_List" ItemsSource="{Binding UPS_Accounting}" Margin="20,75,250,0" Background="{x:Null}" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Width="*" Header="Модель ИБП" Binding="{Binding UPSModel.UPSName}"/>
                <DataGridTextColumn Width="*" Header="Серийный номер" Binding="{Binding SerialNumber}"/>
                <DataGridTextColumn Width="*" Header="Инвентарный номер" Binding="{Binding InventoryNumber}"/>
                <DataGridTextColumn Width="*" Header="Статус" Binding="{Binding EquipmentStatus.StatusName}"/>
                <DataGridTextColumn Width="*" Header="Дата поставки" Binding="{Binding ArrivalDate}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Модель ИБП" HorizontalAlignment="Left" Margin="851,75,0,0" VerticalAlignment="Top"/>
        <Label Content="Серийный номер" HorizontalAlignment="Left" Margin="851,137,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="tbSerial" HorizontalAlignment="Left" Margin="851,168,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="230" Text="{Binding SelectedItem.SerialNumber, ElementName = IBP_List}"/>
        <Label Content="Инвентарный номер" HorizontalAlignment="Left" Margin="851,199,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="tbInventory" HorizontalAlignment="Left" Margin="851,230,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="230" Text="{Binding SelectedItem.InventoryNumber, ElementName = IBP_List}"/>
        <Label Content="Статус" HorizontalAlignment="Left" Margin="851,261,0,0" VerticalAlignment="Top"/>
        <Label Content="Дата прибытия" HorizontalAlignment="Left" Margin="851,323,0,0" VerticalAlignment="Top"/>
        <DatePicker DataContext="{Binding SelectedItem.ArrivalDate, ElementName = IBP_List}" x:Name="dpArrival" HorizontalAlignment="Left" Margin="851,354,0,0" VerticalAlignment="Top" Width="230"/>
        <Label Content="Фильтрация" HorizontalAlignment="Left" Margin="83,32,0,0" VerticalAlignment="Top"/>
        <ComboBox x:Name="cbFilter" SelectionChanged="filterCB" ItemsSource="{Binding EquipmentStatus.StatusName}" DisplayMemberPath="StatusName" HorizontalAlignment="Left" Margin="164,34,0,0" VerticalAlignment="Top" Width="160"/>
        <Label Content="Поиск" HorizontalAlignment="Left" Margin="365,32,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="SearchTB" HorizontalAlignment="Left" Margin="416,34,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="308" Height="22" TextChanged="SearchTB_TextChanged"/>
        <Button Style="{DynamicResource btn_Style}" Click="btnAdd" Content="Button" HorizontalAlignment="Left" Margin="851,385,0,0" VerticalAlignment="Top" Width="50" Height="50" Foreground="{x:Null}" BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/plus (1).png"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource btn_Style}" Click="btnEdit" Content="Button" HorizontalAlignment="Left" Margin="1031,385,0,0" VerticalAlignment="Top" Width="50" Height="50" BorderBrush="{x:Null}" Foreground="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/edit-info.png"/>
            </Button.Background>
        </Button>
        <ComboBox x:Name="cbStatus" ItemsSource="{Binding EquipmentStatus.StatusName}" DisplayMemberPath="StatusName" Text="{Binding ElementName = IBP_List, Path = SelectedItem.EquipmentStatus.StatusName}" HorizontalAlignment="Left" Margin="851,292,0,0" VerticalAlignment="Top" Width="230"/>
        <ComboBox x:Name="cbUPS" ItemsSource="{Binding UPSModel.UPSName}" DisplayMemberPath="UPSName" Text="{Binding ElementName = IBP_List, Path = SelectedItem.UPSModel.UPSName}" HorizontalAlignment="Left" Margin="851,106,0,0" VerticalAlignment="Top" Width="230"/>
        <TextBox HorizontalAlignment="Left" Margin="873,48,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="53" IsReadOnly="True" x:Name="tbID" Text="{Binding SelectedItem.ID ,ElementName=IBP_List}"/>
        <Label Content="ID" HorizontalAlignment="Left" Margin="851,44,0,0" VerticalAlignment="Top"/>
        <Button Style="{DynamicResource btn_Style}" Content="Button" HorizontalAlignment="Left" Margin="755,20,0,0" VerticalAlignment="Top" Click="btnLoadData" Width="50" Height="50" BorderBrush="{x:Null}" Foreground="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="/cloud-computing.png"/>
            </Button.Background>
        </Button>
    </Grid>
</Window>
